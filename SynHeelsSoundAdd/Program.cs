using Mutagen.Bethesda;
using Mutagen.Bethesda.Plugins;
using Mutagen.Bethesda.Skyrim;
using Mutagen.Bethesda.Synthesis;
using Noggog;
using SynHeelsSoundAdd.Patchers;

namespace SynHeelsSoundAdd
{
    public class Program
    {
        public static Lazy<Settings> PatchSettings = null!;

        public static async Task<int> Main(string[] args)
        {
            return await SynthesisPipeline.Instance
                .AddPatch<ISkyrimMod, ISkyrimModGetter>(RunPatch)
                .SetAutogeneratedSettings("Settings", "settings.json", out PatchSettings)
                .SetTypicalOpen(GameRelease.SkyrimSE, "YourPatcher.esp")
                .Run(args);
        }

        public static void RunPatch(IPatcherState<ISkyrimMod, ISkyrimModGetter> state)
        {
            // get heels sound formkey
            if (!FormKey.TryFactory("004527:Heels Sound.esm", out var hhSoundSetFformKey))
            {
                Console.WriteLine("Failed to get heels sound! Exit..");
                return;
            }

            // get clothing only option
            bool isOnlyClothing = PatchSettings.Value.IsAddForClothingOnly;

            // set patchers
            var patchers = new List<PatcherBase>(2)
            {
                new HDTHighHeels(),
                new NIOHH(),
            };

            // set patcher valid and using data
            foreach (var patcher in patchers)
                if (patcher.SetIsValid(state))
                    patcher.SetInputData(new PatcherData() { State = state, HighHeelSoundFormKey = hhSoundSetFformKey });

            // check all boots with patchers
            foreach (var armorGetter in state.LoadOrder.PriorityOrder.Armor().WinningOverrides())
            {
                // skip invalid
                if (armorGetter == null) continue;
                if (armorGetter.BodyTemplate == null) continue;
                if (!armorGetter.BodyTemplate.FirstPersonFlags.HasFlag(BipedObjectFlag.Feet)) continue; // only boots
                //// option: skip armored boots
                if (isOnlyClothing && (armorGetter.BodyTemplate.ArmorType != ArmorType.Clothing)) continue;

                foreach (var patcher in patchers)
                {
                    if (patcher.IsFound(armorGetter))
                    {
                        patcher.AddSound();
                        break; // sound added
                    }
                }
            }

            Console.WriteLine("Finished");
        }
    }
}
